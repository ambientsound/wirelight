/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pb.proto */

#ifndef PROTOBUF_C_pb_2eproto__INCLUDED
#define PROTOBUF_C_pb_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _LED LED;


/* --- enums --- */


/* --- messages --- */

struct  _LED
{
  ProtobufCMessage base;
  protobuf_c_boolean has_index;
  uint32_t index;
  protobuf_c_boolean has_rgb;
  uint32_t rgb;
};
#define LED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&led__descriptor) \
    , 0,0, 0,0 }


/* LED methods */
void   led__init
                     (LED         *message);
size_t led__get_packed_size
                     (const LED   *message);
size_t led__pack
                     (const LED   *message,
                      uint8_t             *out);
size_t led__pack_to_buffer
                     (const LED   *message,
                      ProtobufCBuffer     *buffer);
LED *
       led__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   led__free_unpacked
                     (LED *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LED_Closure)
                 (const LED *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor led__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pb_2eproto__INCLUDED */
